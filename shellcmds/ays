#!/usr/bin/env jspython

from JumpScale import j

import click

@click.group()
def cli():
    pass

@click.command()
@click.argument('role')
@click.argument('instance')
@click.option('--count', default=1, help='number of instances you want to create, default is 1')
@click.option('--domain', default="", help='optional domain of ays')
@click.option('--version', default="", help='optional version of ays')
def new(role,instance,count=1,domain="",version=""):
    """
    @arg role: name of role of instance you want to create
    @arg instance: the name for the instance 
    """
    from ptpython.repl import embed
    print ("DEBUG NOW new")
    embed(globals(), locals())
    
    click.echo('new')

@click.command()
def init():
    """
    as first step this command will look for blueprints (they are in your ays repo under path $aysdir/blueprints)
    they will be processed in sorted order
    the blueprints will be converted to ays instances
    the changes with before (last time you did an init) will be shown
    """
    chfiles=j.atyourservice.init()
    chfiles.sort()
    for item in chfiles:
        print ("- %s"%item)


@click.command()
def apply():
    j.atyourservice.apply()


cli.add_command(new)
cli.add_command(init)
cli.add_command(apply)

if __name__ == '__main__':
    cli()

# j.application.stop()
# j.logger.enabled = False
